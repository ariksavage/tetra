<?php

namespace Core\API;

require_once(__DIR__ . '/base.api');
require_once(CORE_ROOT . '/models/user.model');

use Models\User;

class Users extends Base {

  public function __construct()
  {
    parent::__construct('users', '\Core\Models\User', 'Users', 'User');
  }

  /**
   * Get a list of columns to be used for search queries.
   * To be overridden by specific APIs.
   *
   * @return Array<String> List of column names.
   */
  protected function searchColumns(): Array
  {
    return ['username', 'first_name', 'last_name', 'middle_name', 'email'];
  }

  /**
   * Build a query to list users.
   *
   * @param int $page     Page number of results to return.
   * @param int $per      Number of results per page.
   *
   * @return selectQuery  Query object
   */
  protected function listQuery(int $page = 1, int $per = 20): \Core\Database\selectQuery
  {
    $query = parent::listQuery($page, $per);
    // update query here
    return $query;
  }

  public function currentGET()
  {
    if ($currentUser = $this->getCurrentUser()) {
      $this->success('user', $currentUser);
    }
  }

  public function logoutGET()
  {
    $currentUser = $this->getCurrentUser();
    if($currentUser->logout()) {
      $this->successMsg("Successfully logged out.");
    }
  }

  public function passwordResetLinkPOST(int $id)
  {
    $user = $this->getById($id);
    $host = $this->postValue('host');
    $link = $user->passwordResetLink($host);
    $this->success('password-reset', $link);
  }
}
?>
