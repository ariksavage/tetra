<?php

namespace Core\API;

require_once(__DIR__ . '/base.api');
require_once(CORE_ROOT . '/models/user.model');

use \Core\Models\User;

class Core extends Base {

  public function __construct()
  {
    $this->data = new \stdClass();
  }

  public function requiresAuth() {
    return false;
  }

  /**
   * Basic check to see if the core is reachable
   */
  public function coreGET()
  {
    $this->successMsg('Core found');
  }

  protected function getMenuChildren($parent = 0)
  {
    $items = $this->select()->from('menu')
    ->where('parent', '=', $parent)
    ->orderBy('weight')
    ->execute();
    foreach($items as &$item) {
      $item->id = intval($item->id);
      $item->parent = intval($item->parent);
      $item->weight = intval($item->weight);
      $item->children = $this->getMenuChildren($item->id);
    }
    return $items;
  }

  public function menuTreeGET($root = '') {
    $root = '/' . $root;
    $parent = new \stdClass();
    $parent->path = $root;
    $parent->icon = null;
    $parent->title = null;
    if ($root == '/'){
      $parent->id = 0;

    } else {
      $parent = $this->select()
      ->from('menu')
      ->where('path', '=', $root)
      ->execute(true);
    }
    $parent->children = $this->getMenuChildren($parent->id);
    $this->success('menu', $parent);
  }

  public function appGET()
  {
    $config = new \stdClass();
    $config->name = $this->configValue('name');
    $config->copyright = $this->configValue('copyright');
    $this->success('config', $config);
  }

  public function loginPOST()
  {
    $username = $this->postValue('username');
    $password = $this->postValue('password');
    $sessionExpiresDays = $this->configValue('session_expires_days');
    $user = new User();
    if ($token = $user->login($username, $password, $sessionExpiresDays)) {
      $this->addData('token', $token);
      $this->success('user', $user, "Welcome, {$user->name()}");
    } else {
      $this->error('Login failed', 401, 'Login');
    }
  }

}
?>
